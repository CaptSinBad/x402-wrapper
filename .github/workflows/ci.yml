name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  migrations-and-tests:
    runs-on: ubuntu-latest
    env:
      # Provide runtime secrets to steps from GitHub Secrets (do NOT store values in repo)
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
      SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
      NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
      NEXT_PUBLIC_PRIVY_APP_ID: ${{ secrets.NEXT_PUBLIC_PRIVY_APP_ID }}
      PRIVY_APP_SECRET: ${{ secrets.PRIVY_APP_SECRET }}
      NEXT_PUBLIC_FACILITATOR_URL: ${{ secrets.NEXT_PUBLIC_FACILITATOR_URL }}
      FACILITATOR_KEY: ${{ secrets.FACILITATOR_KEY }}
      SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: x402db
        options: >-
          --health-cmd "pg_isready -U postgres" --health-interval 5s --health-timeout 5s --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm ci

      - name: Install psql client
        run: sudo apt-get update && sudo apt-get install -y postgresql-client

      - name: Wait for Postgres
        run: |
          for i in $(seq 1 20); do
            pg_isready -h localhost -p 5432 -U postgres && break || sleep 1
          done
        env:
          PGPASSWORD: postgres

      - name: Apply DB migrations
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          PGPASSWORD: postgres
        run: |
          # If no DATABASE_URL secret is provided, fall back to the local postgres service
          if [ -z "$DATABASE_URL" ]; then
            export DATABASE_URL="postgres://postgres:postgres@localhost:5432/x402db"
          fi
          node scripts/run-migrations.js

      - name: DB readiness check
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
        run: |
          if [ -z "$DATABASE_URL" ]; then
            export DATABASE_URL="postgres://postgres:postgres@localhost:5432/x402db"
          fi
          node scripts/check-db-ready.js

      - name: Typecheck
        run: npx tsc --noEmit

      - name: Run tests
        run: npx vitest run --reporter verbose

      - name: Build
        run: npm run build --if-present
